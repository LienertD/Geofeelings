/**
 * Created by Jonatan on 11/11/2015.
 */

(function () {
    "use strict";

    var app = angular.module("geofeelings", ["ngRoute"]);

    app.config(function ($routeProvider) {
        $routeProvider.when("/search", {
            templateUrl: "./controllers/searchController/search.html"
        }).when("/intro", {
            templateUrl: "./controllers/introController/intro.html"
        }).when("/login", {
            templateUrl: "./controllers/loginController/login.html"
        }).when("/register", {
            templateUrl: "./controllers/registerController/register.html"
        }).when("/user", {
            templateUrl: "./controllers/userController/user.html"
        }).when("/event", {
            templateUrl: "./controllers/eventController/event.html"
        }).otherwise({
            redirectTo: "/search"
        });
    });
})();

/**
 * Created by Jonatan on 4/12/2015.
 */


(function () {
    "use strict";

    var eventController = function ($scope) {

    };

    angular.module("geofeelings").controller("eventController", ["$scope", eventController]);
})();
/**
 * Created by Jonatan on 1/12/2015.
 */

(function () {
    "use strict";

    var introController = function ($scope) {

    };

    angular.module("geofeelings").controller("introController", ["$scope", introController]);
})();
/**
 * Created by Jonatan on 26/11/2015.
 */

(function () {
    "use strict";

    var loginController = function ($scope) {

    };

    angular.module("geofeelings").controller("loginController", ["$scope", loginController]);
})();
/**
 * Created by Jonatan on 21/11/2015.
 */

(function () {
    "use strict";

    var mapController = function ($scope) {
        if (navigator.geolocation) {
            $scope.image = "./assets/common.png";
            $scope.mapOptions = {
                zoom: 15,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                disableDefaultUI: true
            };

            $scope.map = new google.maps.Map(document.querySelector("#map"), $scope.mapOptions);

            navigator.geolocation.getCurrentPosition(function (position) {
                $scope.map.setCenter(new google.maps.LatLng(position.coords.latitude, position.coords.longitude));
                $scope.marker = new google.maps.Marker({
                    position: $scope.map.getCenter(),
                    map: $scope.map,
                    icon: $scope.image
                });
            });
        } else {
            //throw exception
        }
    };

    angular.module("geofeelings").controller("mapController", ["$scope", mapController]);
})();
/**
 * Created by Jonatan on 26/11/2015.
 */

(function () {
    "use strict";

    var registerController = function ($scope, $http) {
        $scope.signup = function () {

        };
    };

    angular.module("geofeelings").controller("registerController", ["$scope", "$http", registerController]);
})();
/**
 * Created by Jonatan on 25/11/2015.
 */


(function () {
    "use strict";

    var searchController = function ($scope) {

    };

    angular.module("geofeelings").controller("searchController", ["$scope", searchController]);
})();
/**
 * Created by Jonatan on 1/12/2015.
 */

(function () {
    "use strict";

    var userController = function ($scope) {

    };

    angular.module("geofeelings").controller("userController", ["$scope", userController]);
})();
/**
 * Created by Jonatan on 22/11/2015.
 */

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImV2ZW50Q29udHJvbGxlci9ldmVudENvbnRyb2xsZXIuanMiLCJpbnRyb0NvbnRyb2xsZXIvaW50cm9Db250cm9sbGVyLmpzIiwibG9naW5Db250cm9sbGVyL2xvZ2luQ29udHJvbGxlci5qcyIsIm1hcENvbnRyb2xsZXIvbWFwQ29udHJvbGxlci5qcyIsInJlZ2lzdGVyQ29udHJvbGxlci9yZWdpc3RlckNvbnRyb2xsZXIuanMiLCJzZWFyY2hDb250cm9sbGVyL3NlYXJjaENvbnRyb2xsZXIuanMiLCJ1c2VyQ29udHJvbGxlci91c2VyQ29udHJvbGxlci5qcyIsIm1hcEV4Y2VwdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzNCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNaQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ1pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2hDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNaQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgSm9uYXRhbiBvbiAxMS8xMS8yMDE1LlxyXG4gKi9cclxuXHJcbihmdW5jdGlvbiAoKSB7XHJcbiAgICBcInVzZSBzdHJpY3RcIjtcclxuXHJcbiAgICB2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoXCJnZW9mZWVsaW5nc1wiLCBbXCJuZ1JvdXRlXCJdKTtcclxuXHJcbiAgICBhcHAuY29uZmlnKGZ1bmN0aW9uICgkcm91dGVQcm92aWRlcikge1xyXG4gICAgICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oXCIvc2VhcmNoXCIsIHtcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6IFwiLi9jb250cm9sbGVycy9zZWFyY2hDb250cm9sbGVyL3NlYXJjaC5odG1sXCJcclxuICAgICAgICB9KS53aGVuKFwiL2ludHJvXCIsIHtcclxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6IFwiLi9jb250cm9sbGVycy9pbnRyb0NvbnRyb2xsZXIvaW50cm8uaHRtbFwiXHJcbiAgICAgICAgfSkud2hlbihcIi9sb2dpblwiLCB7XHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcIi4vY29udHJvbGxlcnMvbG9naW5Db250cm9sbGVyL2xvZ2luLmh0bWxcIlxyXG4gICAgICAgIH0pLndoZW4oXCIvcmVnaXN0ZXJcIiwge1xyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCIuL2NvbnRyb2xsZXJzL3JlZ2lzdGVyQ29udHJvbGxlci9yZWdpc3Rlci5odG1sXCJcclxuICAgICAgICB9KS53aGVuKFwiL3VzZXJcIiwge1xyXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogXCIuL2NvbnRyb2xsZXJzL3VzZXJDb250cm9sbGVyL3VzZXIuaHRtbFwiXHJcbiAgICAgICAgfSkud2hlbihcIi9ldmVudFwiLCB7XHJcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiBcIi4vY29udHJvbGxlcnMvZXZlbnRDb250cm9sbGVyL2V2ZW50Lmh0bWxcIlxyXG4gICAgICAgIH0pLm90aGVyd2lzZSh7XHJcbiAgICAgICAgICAgIHJlZGlyZWN0VG86IFwiL3NlYXJjaFwiXHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufSkoKTtcclxuIiwiLyoqXHJcbiAqIENyZWF0ZWQgYnkgSm9uYXRhbiBvbiA0LzEyLzIwMTUuXHJcbiAqL1xyXG5cclxuXHJcbihmdW5jdGlvbiAoKSB7XHJcbiAgICBcInVzZSBzdHJpY3RcIjtcclxuXHJcbiAgICB2YXIgZXZlbnRDb250cm9sbGVyID0gZnVuY3Rpb24gKCRzY29wZSkge1xyXG5cclxuICAgIH07XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoXCJnZW9mZWVsaW5nc1wiKS5jb250cm9sbGVyKFwiZXZlbnRDb250cm9sbGVyXCIsIFtcIiRzY29wZVwiLCBldmVudENvbnRyb2xsZXJdKTtcclxufSkoKTsiLCIvKipcclxuICogQ3JlYXRlZCBieSBKb25hdGFuIG9uIDEvMTIvMjAxNS5cclxuICovXHJcblxyXG4oZnVuY3Rpb24gKCkge1xyXG4gICAgXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4gICAgdmFyIGludHJvQ29udHJvbGxlciA9IGZ1bmN0aW9uICgkc2NvcGUpIHtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKFwiZ2VvZmVlbGluZ3NcIikuY29udHJvbGxlcihcImludHJvQ29udHJvbGxlclwiLCBbXCIkc2NvcGVcIiwgaW50cm9Db250cm9sbGVyXSk7XHJcbn0pKCk7IiwiLyoqXHJcbiAqIENyZWF0ZWQgYnkgSm9uYXRhbiBvbiAyNi8xMS8yMDE1LlxyXG4gKi9cclxuXHJcbihmdW5jdGlvbiAoKSB7XHJcbiAgICBcInVzZSBzdHJpY3RcIjtcclxuXHJcbiAgICB2YXIgbG9naW5Db250cm9sbGVyID0gZnVuY3Rpb24gKCRzY29wZSkge1xyXG5cclxuICAgIH07XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoXCJnZW9mZWVsaW5nc1wiKS5jb250cm9sbGVyKFwibG9naW5Db250cm9sbGVyXCIsIFtcIiRzY29wZVwiLCBsb2dpbkNvbnRyb2xsZXJdKTtcclxufSkoKTsiLCIvKipcclxuICogQ3JlYXRlZCBieSBKb25hdGFuIG9uIDIxLzExLzIwMTUuXHJcbiAqL1xyXG5cclxuKGZ1bmN0aW9uICgpIHtcclxuICAgIFwidXNlIHN0cmljdFwiO1xyXG5cclxuICAgIHZhciBtYXBDb250cm9sbGVyID0gZnVuY3Rpb24gKCRzY29wZSkge1xyXG4gICAgICAgIGlmIChuYXZpZ2F0b3IuZ2VvbG9jYXRpb24pIHtcclxuICAgICAgICAgICAgJHNjb3BlLmltYWdlID0gXCIuL2Fzc2V0cy9jb21tb24ucG5nXCI7XHJcbiAgICAgICAgICAgICRzY29wZS5tYXBPcHRpb25zID0ge1xyXG4gICAgICAgICAgICAgICAgem9vbTogMTUsXHJcbiAgICAgICAgICAgICAgICBtYXBUeXBlSWQ6IGdvb2dsZS5tYXBzLk1hcFR5cGVJZC5ST0FETUFQLFxyXG4gICAgICAgICAgICAgICAgZGlzYWJsZURlZmF1bHRVSTogdHJ1ZVxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgJHNjb3BlLm1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYXBcIiksICRzY29wZS5tYXBPcHRpb25zKTtcclxuXHJcbiAgICAgICAgICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oZnVuY3Rpb24gKHBvc2l0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICAkc2NvcGUubWFwLnNldENlbnRlcihuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKHBvc2l0aW9uLmNvb3Jkcy5sYXRpdHVkZSwgcG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZSkpO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLm1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAkc2NvcGUubWFwLmdldENlbnRlcigpLFxyXG4gICAgICAgICAgICAgICAgICAgIG1hcDogJHNjb3BlLm1hcCxcclxuICAgICAgICAgICAgICAgICAgICBpY29uOiAkc2NvcGUuaW1hZ2VcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvL3Rocm93IGV4Y2VwdGlvblxyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoXCJnZW9mZWVsaW5nc1wiKS5jb250cm9sbGVyKFwibWFwQ29udHJvbGxlclwiLCBbXCIkc2NvcGVcIiwgbWFwQ29udHJvbGxlcl0pO1xyXG59KSgpOyIsIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IEpvbmF0YW4gb24gMjYvMTEvMjAxNS5cclxuICovXHJcblxyXG4oZnVuY3Rpb24gKCkge1xyXG4gICAgXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4gICAgdmFyIHJlZ2lzdGVyQ29udHJvbGxlciA9IGZ1bmN0aW9uICgkc2NvcGUsICRodHRwKSB7XHJcbiAgICAgICAgJHNjb3BlLnNpZ251cCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoXCJnZW9mZWVsaW5nc1wiKS5jb250cm9sbGVyKFwicmVnaXN0ZXJDb250cm9sbGVyXCIsIFtcIiRzY29wZVwiLCBcIiRodHRwXCIsIHJlZ2lzdGVyQ29udHJvbGxlcl0pO1xyXG59KSgpOyIsIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IEpvbmF0YW4gb24gMjUvMTEvMjAxNS5cclxuICovXHJcblxyXG5cclxuKGZ1bmN0aW9uICgpIHtcclxuICAgIFwidXNlIHN0cmljdFwiO1xyXG5cclxuICAgIHZhciBzZWFyY2hDb250cm9sbGVyID0gZnVuY3Rpb24gKCRzY29wZSkge1xyXG5cclxuICAgIH07XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoXCJnZW9mZWVsaW5nc1wiKS5jb250cm9sbGVyKFwic2VhcmNoQ29udHJvbGxlclwiLCBbXCIkc2NvcGVcIiwgc2VhcmNoQ29udHJvbGxlcl0pO1xyXG59KSgpOyIsIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IEpvbmF0YW4gb24gMS8xMi8yMDE1LlxyXG4gKi9cclxuXHJcbihmdW5jdGlvbiAoKSB7XHJcbiAgICBcInVzZSBzdHJpY3RcIjtcclxuXHJcbiAgICB2YXIgdXNlckNvbnRyb2xsZXIgPSBmdW5jdGlvbiAoJHNjb3BlKSB7XHJcblxyXG4gICAgfTtcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZShcImdlb2ZlZWxpbmdzXCIpLmNvbnRyb2xsZXIoXCJ1c2VyQ29udHJvbGxlclwiLCBbXCIkc2NvcGVcIiwgdXNlckNvbnRyb2xsZXJdKTtcclxufSkoKTsiLCIvKipcclxuICogQ3JlYXRlZCBieSBKb25hdGFuIG9uIDIyLzExLzIwMTUuXHJcbiAqL1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
